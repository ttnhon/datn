@model COURSE_CODING.Models.CreateChallengeModel

@{
    ViewBag.Title = "Create Challenge";
    Layout = "~/Views/Shared/_User_Layout.cshtml";
}
@section CustomCSS
{
    @Styles.Render("~/Assets/Public/css/create-challenge.css")
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,700" rel="stylesheet">
}

<div style="border-bottom: 1px solid #C2C7D0;">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/Moderator/ManageChallenge"><b>Manage Challenges</b></a>
                </li>

                <li class="breadcrumb-item active">
                    <a href="#"><b>Create Challenge</b></a>
                </li>
            </ol>
        </nav>
    </div>
</div>

<div class="container">
    <h1 class="title">Create Challenge</h1>

    <p class="subtitle"><i>Get started by providing the initial details needed to create a challenge.</i></p>
    @using (Ajax.BeginForm("CreateNewChallenge", "Moderator", new AjaxOptions()
    {
        HttpMethod = "POST",
        OnSuccess = "OnSuccess",
        OnFailure = "OnFailure"
    }, new { @class = "form-horizontal" }))
    {
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="name_Input">Challenge Name</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "name_Input" })
                @*<input class="form-control" id="name_Input" type="text">*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="difficulty_Input">Challenge Difficulty</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(model => model.Difficulty,
                                    new SelectList(Enum.GetValues(typeof(COURSE_CODING.Models.Difficulty))),
                                    new { @class = "form-control", @id = "difficulty_Input" })
                @*<select class="form-control" id="difficulty_Input">
                        <option>Easy</option>
                        <option>Medium</option>
                        <option>Hard</option>
                        <option>Advanced</option>
                        <option>Expert</option>
                    </select>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="description_Input">Score</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.Score, new { @class = "form-control", @id = "score_Input", style = "width: 250px", type = "number" })
                @*<textarea class="form-control" rows="2" id="description_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="description_Input">Description</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "description_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="description_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="problem_Input">Problem Statement</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.ProblemStatement, new { @class = "form-control", @id = "problem_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="problem_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="inputFormat_Input">Input Format</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.InputFormat, new { @class = "form-control", @id = "inputFormat_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="inputFormat_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="constraints_Input">Constraints</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.Constraints, new { @class = "form-control", @id = "constraints_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="constraints_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="outputFormat_Input">Output Format</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.OutputFormat, new { @class = "form-control", @id = "outputFormat_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="outputFormat_Input"></textarea>*@
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 control-label" for="tags_Input">Tags</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(model => model.Tags, new { @class = "form-control", @id = "tags_Input", @rows = "4" })
                @*<textarea class="form-control" rows="2" id="tags_Input"></textarea>*@
            </div>
        </div>
        @Html.HiddenFor(model => model.competeID)
        <div class="save-change-btn-group">
            <button class="btn btn-success" id="js-save-changes-btn" type="submit">Save Changes</button>
        </div>
    }
</div>
<div style="height: 100px;">
</div>

@section scripts{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Assets/Public/vendor/ckeditor5-build-classic/ckeditor.js"></script>
    <script src="~/Assets/Public/vendor/sweetalert2-8.13.1/dist/sweetalert2.all.min.js"></script>
    <script>
        window.onload = function SetClassicEditor() {
            ClassicEditor
                .create(document.querySelector('#description_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#problem_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#inputFormat_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#constraints_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#outputFormat_Input'))
                .catch(error => {
                    console.error(error);
                });
        }
        function OnSuccess(data) {
            console.log(data)
            if (data.result) {
                if (data.competeID != 0) {
                    window.location.href = `/Moderator/EditCompete/${data.competeID}`;
                }
                else {
                    window.location.href = `/Moderator/Edit/Challenge/${data.challengeID}`;
                }
            } else {
                Swal.fire({
                    position: 'top-end',
                    type: 'error',
                    title: 'Operation fail',
                    showConfirmButton: false,
                    timer: 1000
                })
            }
        }
        function OnFailure(data) {
            //console.log(data)
            Swal.fire({
                position: 'top-end',
                type: 'error',
                title: 'POST: fail',
                showConfirmButton: false,
                timer: 1000
            })
        }
    </script>
}