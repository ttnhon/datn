@model COURSE_CODING.Models.ForgotPasswordModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    @Styles.Render("~/Content/cssRegister")
</head>
<body class="bgForm">

    <div class="container">
        <div class="card card-register mx-auto mt-5">
            <h1 class="card-header justify-content-center align-center text-center">Change password</h1>
            <div class="card-body">
                @using (Html.BeginForm("ChangePassword", "Authen", FormMethod.Post))
                {
                <div class="form-horizontal">
                    <div>
                        @if (ViewBag.Success != null)
        {<div class="alert alert-success">@ViewBag.Success</div>}
else
{
}
                    </div>
                    <div id="status_view">
                        @if (TempData["AlertMessage"] != null)
        {
                <div id="AlertBox" class="alert @TempData["AlertType"] hide">
                    @TempData["AlertMessage"]
                </div>
}
                    </div>
                    <div class="form-group">
                        <div class="form-row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 pt-1" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    @if (ViewBag.isValidateCode != false)
    {
                <div class="form-group">
                    <div class="form-row">
                        @Html.LabelFor(model => model.CodeValidate, htmlAttributes: new { @class = "control-label col-md-3 pt-1" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.CodeValidate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CodeValidate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
}


                    <div class="form-group">
                        <div class="form-row">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 pt-1" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-row">
                            @Html.LabelFor(model => model.ComfirmPassword, htmlAttributes: new { @class = "control-label col-md-3 pt-1" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ComfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ComfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-md-12 offset-3">
                                <input type="submit" value="Change" class="btn btn-success" />
                            </div>
                        </div>
                    </div>

                </div>
                }
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
</body>
</html>
