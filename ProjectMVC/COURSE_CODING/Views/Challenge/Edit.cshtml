@using COURSE_CODING.Models
@model COURSE_CODING.Models.EditDetailModel

@{
    ViewBag.Title = "Edit Challenge";
    Layout = "~/Views/Shared/_User_Layout.cshtml";
}

@if (ViewBag.CanAccess == false)
{
    <div style="text-align: center;margin: 0 auto; padding: 30px;">
        <h2>You don't have permission to view this page</h2>
        <h2>405!</h2>
    </div>
    return;
}

@section CustomCSS
{
    @Styles.Render("~/Assets/Public/css/EditChallenge.css")
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,700" rel="stylesheet">
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<section class="content-page edit-challenge">
    <div class="container">
        <h1 class="title">@ViewBag.Name</h1>
        <nav class="navbar navbar-light bg-light">
            <ul class="nav nav-tabs tabs-bar" style="margin-bottom: 0;">
                <li class="nav-item">
                    <a id="js-details" class="nav-link active" href="/Moderator/Edit/Challenge/@Model.ID">Details</a>
                </li>
                <li class="nav-item"><a id="js-moderators" class="nav-link" href="/Moderator/Edit/Challenge/@Model.ID/Moderator">Moderators</a></li>
                <li class="nav-item"><a id="js-test-cases" class="nav-link" href="/Moderator/Edit/Challenge/@Model.ID/Testcase">Test cases</a></li>
                <li class="nav-item"><a id="js-code-stubs" class="nav-link" href="/Moderator/Edit/Challenge/@Model.ID/Codestubs">Code stubs</a></li>
                <li class="nav-item"><a id="js-languages" class="nav-link" href="/Moderator/Edit/Challenge/@Model.ID/Languages">Languages</a></li>
                <li class="nav-item"><a id="js-settings" class="nav-link" href="/Moderator/Edit/Challenge/@Model.ID/Settings">Settings</a></li>
            </ul>
        </nav>


        <div class="details-modal main-modal" id="div-details-modal">
            <div class="clearfix" style="padding-bottom: 15px;">
                <div style="float: left;">
                    This is the basic infomation that describes your challenge.
                </div>
                <!-- <a class="btn btn-success" href="#" style="float: right;">Create Contest</a> -->
            </div>

            @using (Ajax.BeginForm("UpdateDetails", "Challenge", new AjaxOptions()
            {
                HttpMethod = "POST",
                OnSuccess = "OnSuccessDetail",
                OnFailure = "OnFailure"
            }, new { @class = "form-horizontal" }))
            {
                @Html.Hidden("ID", Model.ID)
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="language_Input">Language</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.Language,
                                            new SelectList(Enum.GetValues(typeof(Language))),
                                            new { @class = "form-control", @id = "language_Input" })
                        @*<select class="form-control" id="language_Input">
                                <option>English</option>
                                <option>Vietnamese</option>
                            </select>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="difficulty_Input">Challenge Difficulty</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.Difficulty,
                                            new SelectList(Enum.GetValues(typeof(Difficulty))),
                                            new { @class = "form-control", @id = "difficulty_Input" })
                        @*<select class="form-control" id="difficulty_Input">
                                <option>Easy</option>
                                <option>Medium</option>
                                <option>Hard</option>
                                <option>Advanced</option>
                                <option>Expert</option>
                            </select>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="name_Input">Challenge Name</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "name_Input" })
                        @*<input class="form-control" id="name_Input" type="text">*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="slug_Input">Challenge Slug</label>
                    <div class="col-sm-8">
                        <p class="form-control-static" id="slug_Input">https://www.khtnfitk15.somee.com/.../@Html.DisplayFor(model => model.Slug)</p>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="description_Input">Score</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Score, new { @class = "form-control", @id = "score_Input", style = "width: 250px", type = "number" })
                        @*<textarea class="form-control" rows="2" id="description_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="description_Input">Description</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "description_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="description_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="problem_Input">Problem Statement</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.ProblemStatement, new { @class = "form-control", @id = "problem_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="problem_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="inputFormat_Input">Input Format</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.InputFormat, new { @class = "form-control", @id = "inputFormat_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="inputFormat_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="constraints_Input">Constraints</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Constraints, new { @class = "form-control", @id = "constraints_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="constraints_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="outputFormat_Input">Output Format</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.OutputFormat, new { @class = "form-control", @id = "outputFormat_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="outputFormat_Input"></textarea>*@
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 control-label" for="tags_Input">Tags</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Tags, new { @class = "form-control", @id = "tags_Input", @rows = "4" })
                        @*<textarea class="form-control" rows="2" id="tags_Input"></textarea>*@
                    </div>
                </div>
                <div class="save-change-btn-group">
                    <button class="btn btn-success" id="js-save-changes-btn" type="submit">Save Changes</button>
                </div>
            }
            @*<form class="form-horizontal" method="post">

                </form>*@
        </div>
        <div style="height: 100px;">

        </div>
        @*<div class="save-change-btn-group">
                <button class="btn btn-success" id="js-save-changes-btn">Save Changes</button>
            </div>*@
    </div>
</section>

@section scripts
    {
    <script src="~/Assets/Public/vendor/ckeditor5-build-classic/ckeditor.js"></script>
    <script src="~/Assets/Public/vendor/sweetalert2-8.13.1/dist/sweetalert2.all.min.js"></script>
    <script type="text/javascript">

        window.onload = function SetClassicEditor() {
            ClassicEditor
                .create(document.querySelector('#description_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#problem_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#inputFormat_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#constraints_Input'))
                .catch(error => {
                    console.error(error);
                });
            ClassicEditor
                .create(document.querySelector('#outputFormat_Input'))
                .catch(error => {
                    console.error(error);
                });
        }

        function OnSuccessDetail(data) {
            if (data.result) {
                document.getElementById("slug_Input").innerHTML = 'https://www.khtnfitk15.somee.com/.../' + data.data.Slug;
                Swal.fire({
                    position: 'top-end',
                    type: 'success',
                    title: 'Save changes succeed',
                    showConfirmButton: false,
                    timer: 1000
                })
            } else {
                Swal.fire({
                    position: 'top-end',
                    type: 'error',
                    title: 'Save changes fail',
                    showConfirmButton: false,
                    timer: 1000
                })
            }
        }
        function OnFailure(data) {
            Swal.fire({
                position: 'top-end',
                type: 'error',
                title: 'POST: fail',
                showConfirmButton: false,
                timer: 1000
            })
        }
    </script>
}